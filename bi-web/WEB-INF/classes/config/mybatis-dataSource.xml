<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans" 
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:tx="http://www.springframework.org/schema/tx" 
		xmlns:aop="http://www.springframework.org/schema/aop" 
		xsi:schemaLocation="
			http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
			http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
			">
	<!-- 引入属性文件
		<context:property-placeholder location="classpath:config/jdbc.properties" />
 	-->
	 <bean id="placeholderConfig" class="org.bi.webbace.util.PropertyPlaceholderConfigurerExt">
		  <property name="location">
		    <value>classpath:config/jdbc.properties</value>
		  </property>
	 </bean>


	<!-- JNDI方式配置数据源 -->
	<!-- <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> <property name="jndiName" value="${jndiName}"></property> </bean> -->
	
	<bean name="plsql" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url" value="${jdbc_url}" />
		<property name="driverClassName" value="${driver_class_name}" />
		<property name="username" value="${jdbc_user_name}" />
		<property name="password" value="${encrypt_jdbc_password}" />
<!--  	<property name="filters" value="mergeStat" /> -->
        <property name="connectionProperties" value="config.decrypt=true" />
		<property name="initialSize" value="1" />
		<property name="maxActive" value="200" />
		<property name="minIdle" value="0" />
<!-- 	<property name="maxWait" value="60000" /> -->

		<property name="validationQuery" value="${validation_query}" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="25200000" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="1800" />
		<property name="logAbandoned" value="true" />
	</bean>
	


	<bean id="dynamicDataSource" class="org.bi.webbace.util.mybatis.datasouce.DynamicDataSource" >  
	    <!-- 通过key-value的形式来关联数据源 -->  
	    <property name="targetDataSources">  
	        <map key-type="java.lang.String">  
<!-- 	            <entry value-ref="mysql" key="mysql"></entry>   -->
	            <entry value-ref="plsql" key="plsql"></entry>  
	        </map>  	
	    </property>  
	    <property name="defaultTargetDataSource" ref="plsql" >  
	    </property>  
	</bean> 

	<!-- myBatis文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dynamicDataSource" />
		<property name="configLocation"  value="classpath:config/mybatis-plugin.xml" />  
		<property name="mapperLocations">
			<array>
				<value>classpath*:org/bi/**/mapper/*.xml</value>
			</array>
		</property>
	</bean>

<!-- 	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> -->
<!-- 		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" /> -->
<!-- 	</bean> -->
	
	<!-- SqlSessionTemplate -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype"> 
	  <constructor-arg index="0" ref="sqlSessionFactory" />  
	  <constructor-arg index="1" value="BATCH" />	 <!--  如果想要进行批量操作可加入这个属性 -->
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dynamicDataSource" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" />
</beans>	