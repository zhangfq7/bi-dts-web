define(["bace","view/box"],function(c,b){var a={};a.control={openFilter:function(){a.view.openFilter()},closeFilter:function(){a.view.closeFilter()},dataStart:function(h){if(h==="collect"){var e=[];jQuery("#filterPanel .filter-attr").each(function(){var r=$(this);var t=r.data("filterAttrData");var q="";if(t.dimId||["A","B","C"].indexOf(t.filterType)>-1){var l=r.find(".bi-input").data("code");t.filterValue=l?l.join(","):"";t.filterLabelValue=JSON.stringify([r.find(".bi-input").val(),""])}else{var m=r.find(".intervalInput.start").val();var o=r.find(".chooseType.start >select").val();var v=o.split("_");var i=v[0];if(i=="more"||i=="moreEq"){var p="";var u=r.find(".chooseType.end >select").val();m=encodeURIComponent(m);var s=encodeURIComponent(r.find(".intervalInput.end").val());var k=i=="more"?">":">=";var n=u=="less"?"<":"<=";if(m&&s){q=k+m+","+n+s;t.filterLabelValue=JSON.stringify([m,s])}else{if(m){q=k+m;t.filterLabelValue=JSON.stringify([m,""])}if(s){q=n+s;t.filterLabelValue=JSON.stringify(["",s])}if(m==""&&s==""){t.filterLabelValue=JSON.stringify(["",""])}}t.filterSelectValue=JSON.stringify([o,u])}else{if(i=="like"){q="%"+m+"%"}if(i=="leftLike"){q=m+"%"}if(i=="rightLike"){q="%"+m}if(i=="eq"){q=m}t.filterSelectValue=JSON.stringify([o,""]);t.filterLabelValue=JSON.stringify([m,""])}t.filterValue=q}e.push(t)});return e}else{for(var f=0,j=h.length;f<j;f++){var g=a.view._packFilter(h[f]);jQuery(".filter-panel").append(g);var d=$.evalJSON(h[f].filterLabelValue);(function(k,i){setTimeout(function(){i.find(".intervalInput.start").val(decodeURIComponent(k[0]));i.find(".intervalInput.end").val(decodeURIComponent(k[1]))},100)})(d,g)}}a.view.init()},getPluginByType:function(d){if(["pie","bar","barMix","line","radar","funnel","gauge","map","treemap","scatter"].indexOf(d)>-1){return b.Widgets.plugins.echarts}else{return b.Widgets.plugins[d]}}};a.view={init:function(){b.Filter.dataStart=a.control.dataStart;var e=a.view.bindFilterEvent;for(var d in e){e[d]()}},_packFilter:function(e){e.filterId=e.attrId+"_"+new Date().getTime();var d='<div id="${filterId}" class="filter-attr cursor-pointer">   	<span class="label">   		<label>${attrName}</label><span>：</span>   		<input id="${filterId}_input" type="text" class="bi-input target" />   	</span>   	<span class="icon-filter-tools">   		<i class="fa fa-remove icon-filter-hover" style="margin-left:1px"></i>   	</span></div>';var f=$.tmpl(d,e).data("filterAttrData",e);setTimeout(function(){a.view.translate(e)},0);return f},translate:function(p,j){var e=$("#"+p.filterId);var l=e.find("input.target");e.find("select").chosen("destroy");e.find(".bi-filter").remove();var j=p.filterType;if([a.module.filterType.DIM,"A","B","C"].indexOf(j)>-1){var o=e.data("filterAttrData").dimId;var d=e.data("filterAttrData").filterType;function h(t,r,s){return s.RES_DATA}var n=p.filterLabelValue?$.evalJSON(p.filterLabelValue)[0]:"";e.find(".bi-input").bzTree({async:{label:n,code:p.filterValue,enable:true,autoParam:["id=clickCode","dimId=clickDimId"],url:c.handleUrlParam(a.module.ajaxURL),dataType:"json",otherParam:{dimId:o,filterType:d},dataFilter:h}})}else{var k=p.filterSelectValue?$.evalJSON(p.filterSelectValue):null;var g='<div class="intervalGroup {{if endType != "less" && endType != "lessEq" }} like {{/if}} bi-filter"><div class="chooseType start"><select>{{if attrType != 1 && attrType != 2}}<option {{if startType == "like_9" }} selected {{/if}}value="like_9" >全匹配</option><option {{if startType == "leftLike_9" }} selected {{/if}} value="leftLike_9" >左匹配</option><option {{if startType == "rightLike_9" }} selected {{/if}} value="rightLike_9" >右匹配</option>{{/if}}<option {{if startType == "eq_3" }} selected {{/if}}value="eq_3" >精确</option><option {{if startType == "more_2" }} selected {{/if}}value="more_2" >&gt;</option><option {{if startType == "moreEq_2" }} selected {{/if}} value="moreEq_2" >&gt;=</option></select></div><div><input class="intervalInput start"/></div><div class="chooseType end"  {{if endType != "less" && endType != "lessEq" }}  style="display:none" {{/if}} ><select><option {{if endType == "less" }} selected {{/if}} value="less" >&lt;</option><option {{if endType == "lessEq" }} selected {{/if}} value="lessEq" >&lt;=</option></select></div><div class="endInput" {{if endType != "less" && endType != "lessEq" }}  style="display:none" {{/if}}><input class="intervalInput end"/></div></div>';l.hide().after($.tmpl(g,{attrType:p.attrType,startType:k?k[0]:"",endType:k?k[1]:""}));e.find(".chooseType.start select").chosen({width:"54px",disable_search:true});e.find(".chooseType.end select").chosen({width:"32px",disable_search:true});if(p.attrType==a.module.attrType.DATE){var m=e.find("input.start");var q=e.find("input.end");if(m.data("DateTimePicker")){m.data("DateTimePicker").destroy();q.data("DateTimePicker").destroy()}var f="";var i="";if(j==a.module.filterType.MONTH){f="YYYY-MM"}if(j==a.module.filterType.DAY){f="YYYY-MM-DD";i+="months,days"}if(j==a.module.filterType.TIME){f="YYYY-MM-DD HH:mm:ss";i+="months,days,times"}p.filterValueType=j;e.find("input.start,input.end").datetimepicker({format:f,showClear:true,showTodayButton:true,showChangeType:i,keepOpen:false,onhide:function(){jQuery(this).attr("title",$(this).val()).parents(".filter-attr").removeClass("hover")},onChangeType:function(t,r){var u=e.find("input.start").data("DateTimePicker");var s=e.find("input.end").data("DateTimePicker");u.viewMode(r);u.format(t);s.viewMode(r);s.format(t);switch(r){case"months":p.filterValueType=a.module.filterType.MONTH;break;case"times":p.filterValueType=a.module.filterType.TIME;break;case"days":p.filterValueType=a.module.filterType.DAY;break;default:break}}});e.find("input.startDate").on("dp.change",function(r){e.find("input.endDate").data("DateTimePicker").minDate(r.date)})}}setTimeout(function(){myLayout.center.children.layout1.resizeAll()},0)},bindFilterEvent:{changeFilterSelect:function(){jQuery("#filterPanel").on("change",".chooseType.start select",function(){var d=jQuery(this);var e=d.val();if(["moreEq_2","more_2","less","lessEq"].indexOf(e)>-1){d.parents(".filter-attr .intervalGroup").removeClass("like");d.parents(".filter-attr").find(".end,.endInput").show()}else{d.parents(".filter-attr .intervalGroup").addClass("like");d.parents(".filter-attr").find(".end,.endInput").hide()}setTimeout(function(){myLayout.center.children.layout1.resizeAll()},0)})},search:function(){jQuery("#filterPanel .search ").on("click",function(){jQuery("#tableChartPanel >.container[charttype]").each(function(){var d=$(this).data("option");if(d){(function(e){e.config.build.dataParams.filterJsonStr=$.toJSON(a.control.dataStart("collect"));a.control.getPluginByType(e.chartType).apply(e,true)})(d)}})})},hoverAttr:function(){}}};a.module={ajaxURL:"/platform/dataview/query-tree-data",attrType:{INT:"1",DATE:"2",STRING:"3"},filterType:{DIM:"1",INTERVAL:"2",EQUAL:"3",LIKE:"9",MONTH:"4",DAY:"6",TIME:"7"},};return a.control});